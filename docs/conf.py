import sphinx_bootstrap_theme
import os

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'
needs_sphinx = '1.3'
# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinxcontrib.httpdomain', 'sphinx.ext.autodoc',
              'sphinx.ext.viewcode', 'sphinx.ext.napoleon',
              'sphinx.ext.intersphinx']
# Disable javasphinx generation until we have a solution to long build
# times. readthedocs timesout after 902 seconds.

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = ''
copyright = '2019, OPNFV. Licensed under CC BY 4.0'
author = 'Open Platform for NFV'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = 'Latest'
# The full version, including alpha/beta/rc tags.
release = 'Latest'
# The branch this project should link against for projects
# following the stable-branch process. On the opnfvdocs stable branch
# this should be set to 'stable/<release>' where '<release>' is the
# current stable release (Ex: 'stable/gambia')
branch = 'latest'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['templates/*', 'how-to-use-docs/files/*', 'development/opnfvsecguide/*']

# The reST default role (used for this markup: `text`) to use for all
# documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'bootstrap'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {}
html_theme_options = {
    'bootswatch_theme': "journal",
    'navbar_sidebarrel': False,
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
# html_title = 'OpenDaylight Documentation v0.3.0'

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = '_static/opnfv-logo.png'

# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = '_static/favicon.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
# html_extra_path = []

# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
# html_last_updated_fmt = None

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'h', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'r', 'sv', 'tr', 'zh'
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'OPNFV'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #'preamble': '',

    # Latex figure (float) alignment
    #'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'OPNFV.tex', 'OPNFV Documentation',
     'OPNFV Project', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'OPNFVDocs', 'OPNFV Documentation',
     [author], 1)
]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'OPNFVDocs', 'OPNFV Documentation',
     author, 'OPNFV', 'One line description of project.',
     'Miscellaneous'),
]

html_sidebars = {'**': ['localtoc.html', 'relations.html'],}
# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

intersphinx_mapping = {}
intersphinx_mapping['apex'] = ('https://opnfv-apex.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['armband'] = ('https://opnfv-armband.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['auto'] = ('https://opnfv-auto.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['availability'] = ('https://opnfv-availability.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['barometer'] = ('https://opnfv-barometer.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['bottlenecks'] = ('https://opnfv-bottlenecks.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['calipso'] = ('https://opnfv-calipso.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['clover'] = ('https://opnfv-clover.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['compass4nfv'] = ('https://opnfv-compass4nfv.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['container4nfv'] = ('https://opnfv-container4nfv.readthedocs.io/en/%s' % branch, None)
# intersphinx_mapping['copper'] = ('https://opnfv-copper.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['daisy'] = ('https://opnfv-daisy.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['doctor'] = ('https://opnfv-doctor.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['dovetail'] = ('https://opnfv-dovetail.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['edgecloud'] = ('https://opnfv-edgecloud.readthedocs.io/en/%s' % branch, None)
# intersphinx_mapping['fds'] = ('https://opnfv-fds.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['fuel'] = ('https://opnfv-fuel.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['functest'] = ('https://opnfv-functest.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['ipv6'] = ('https://opnfv-ipv6.readthedocs.io/en/%s' % branch, None)
# intersphinx_mapping['moon'] = ('https://opnfv-moon.readthedocs.io/en/%s' % branch, None)
# intersphinx_mapping['netready'] = ('https://opnfv-netready.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['nfvbench'] = ('https://opnfv-nfvbench.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['onosfw'] = ('https://opnfv-onosfw.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['orchestra'] = ('https://opnfv-orchestra.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['ovn4nfv'] = ('https://opnfv-ovn4nfv.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['ovno'] = ('https://opnfv-ovno.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['parser'] = ('https://opnfv-parser.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['pharos'] = ('https://opnfv-pharos.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['promise'] = ('https://opnfv-promise.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['qtip'] = ('https://opnfv-qtip.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['releng'] = ('https://opnfv-releng.readthedocs.io/en/latest', None)
intersphinx_mapping['releng-xci'] = ('https://opnfv-releng-xci.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['samplevnf'] = ('https://opnfv-samplevnf.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['sdnvpn'] = ('https://opnfv-sdnvpn.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['sfc'] = ('https://opnfv-sfc.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['snaps'] = ('https://opnfv-snaps.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['stor4nfv'] = ('https://opnfv-stor4nfv.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['storperf'] = ('https://opnfv-storperf.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['vswitchperf'] = ('https://opnfv-vswitchperf.readthedocs.io/en/%s' % branch, None)
intersphinx_mapping['yardstick'] = ('https://opnfv-yardstick.readthedocs.io/en/%s' % branch, None)
