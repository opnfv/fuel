##############################################################################
# Copyright (c) 2015 Ericsson AB and others.
# stefan.k.berg@ericsson.com
# jonas.bjurel@ericsson.com
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

The genesis/fuel/ci directory holds all Fuel@OPNFV abstractions for the OPNFV
community release and continous integration pipeline.
There are two Fuel@OPNF autonomous scripts fo this, complying to the OPNFV CI pipeline guideline:
 - build.sh
 - deploy.sh

For more info on usage:
./build.sh -h
sudo ./deploy.sh -h
python deploy.py -h

usage: python deploy.py [-h] [-nf] [-nh] [-fo] [-co] [-c] [-iso [ISO_FILE]]
                        [-dea [DEA_FILE]] [-dha [DHA_FILE]] [-s STORAGE_DIR]
                        [-b PXE_BRIDGE] [-p FUEL_PLUGINS_DIR]

optional arguments:
  -h, --help           show this help message and exit
  -nf                  Do not install Fuel Master (and Node VMs when using
                       libvirt)
  -nh                  Don't run health check after deployment
  -fo                  Install Fuel Master only (and Node VMs when using
                       libvirt)
  -co                  Cleanup VMs and Virtual Networks according to what is
                       defined in DHA
  -c                   Cleanup after deploy
  -iso [ISO_FILE]      ISO File [default: OPNFV.iso]
  -dea [DEA_FILE]      Deployment Environment Adapter: dea.yaml
  -dha [DHA_FILE]      Deployment Hardware Adapter: dha.yaml
  -s STORAGE_DIR       Storage Directory [default: images]
  -b PXE_BRIDGE        Linux Bridge for booting up the Fuel Master VM
                       [default: pxebr]
  -p FUEL_PLUGINS_DIR  Fuel Plugins directory



* EXAMPLES:

- Install Fuel Master and deploy OPNFV Cloud from scratch on Hardware Environment:

    sudo ./deploy.sh -iso ~/ISO/opnfv.iso -dea ~/CONF/hardware/dea.yaml -dha ~/CONF/hardware/dha.yaml -s /mnt/images -b pxebr


- Install Fuel Master and deploy OPNFV Cloud from scratch on Virtual Environment:

    sudo ./deploy.sh -iso ~/ISO/opnfv.iso -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml -s /mnt/images


- Deploy OPNFV Cloud on an already active Environment where Fuel Master VM is running so no need to install Fuel again:

    sudo ./deploy.sh -nf -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml

    => with plugin installation
    sudo ./deploy.sh -nf -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml

    => with cleanup after deployment is finished
    sudo ./deploy.sh -nf -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml -c

    => no healthcheck after deployment is completed
    sudo ./deploy.sh -nf -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml -nh


- Install Fuel Master only (and Node VMs when using virtual environment):

    => for virtual environment:
    sudo ./deploy.sh -iso ~/ISO/opnfv.iso -dea ~/CONF/virtual/dea.yaml -dha ~/CONF/virtual/dha.yaml -s /mnt/images

    => for hardware environment:
    sudo ./deploy.sh -iso ~/ISO/opnfv.iso -dea ~/CONF/hardware/dea.yaml -dha ~/CONF/hardware/dha.yaml -s /mnt/images -b pxebr


- Cleanup a running OPNFV environment:

    sudo ./deploy.sh -co -dha ~/CONF/virtual/dha.yaml


* WARNINGS:

=>  If optional argument -s <storage_dir> is not specified, Autodeployment will use
"<current_working_dir>/images" as default, and it will create it, if it hasn't been created before

=>  If optional argument -b <pxe_bridge> is not specified, Autodeployment will use "pxebr" as default,
if the bridge does not exist, the application will terminate with an error message

=>  If argument -iso [ISO_FILE] is not specified, Autodeployment will use "<current_working_dir>/OPNFV.iso"
as default, if the iso file does not exist, the application will terminate with an error message

=>  If argument -dea [DEA_FILE] is not specified, Autodeployment will use "<current_working_dir>/dea.yaml"
as default, if DEA file does not exist, the application will terminate with an error message

=>  If argument -dha [DHA_FILE] is not specified, Autodeployment will use "<current_working_dir>/dha.yaml"
as default, if DHA file does not exist, the application will terminate with an error message

=> Optional argument -b PXE_BRIDGE is not required for Autodeployment in virtual environment,
   even if it is specified it will not be used at all because virtual environment is using a different virtual network setup

=> If optional argument -p FUEL_PLUGINS_DIR is not specified, no external plugins will be installed in Fuel