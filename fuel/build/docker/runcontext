#!/bin/bash
set -e
##############################################################################
# Copyright (c) 2015 Ericsson AB and others.
# stefan.k.berg@ericsson.com
# jonas.bjurel@ericsson.com
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
#

############################################################################
# BEGIN of Exit handlers
#

do_exit () {
    CID=`cat $CID_FILE`
    rm -f $CID_FILE
    set +e
    docker kill $CID > /dev/null 2>&1
    docker rm -f $CID > /dev/null 2>&1
    docker rmi -f $IID > /dev/null 2>&1
    set -e
}

#
# End of Exit handlers
############################################################################

trap do_exit SIGINT SIGTERM EXIT
context=$1
shift
GID=`id -g`
USER=`whoami`
res=`docker build -q --force-rm -  <<EOF
FROM $context
RUN date || date
RUN /root/setcontext $USER $UID $GID $HOME
EOF`
GITROOT=`git rev-parse --show-toplevel`
IID=`echo $res | sed 's/.* //'`
CID_FILE=`mktemp -u -t runcontext.XXXXXXXXXX`

# Evaluate the need for bind mounting the cache directory
if [ -n "$CACHEBASE" ]; then
    if echo $CACHEBASE | grep -q '^file://'; then
        CACHEMOUNT="-v $(echo $CACHEBASE | sed 's;file://;;'):$(echo $CACHEBASE | sed 's;file://;;')"
    fi
fi

# no_proxy handling necessary for second layer of docker
if [ -n "$no_proxy" ]; then
  my_no_proxy="$no_proxy,/var/run/docker.sock"
else
  my_no_proxy="/var/run/docker.sock"
fi

RUN_CONTEXT_OPT="--cidfile $CID_FILE --privileged=true --rm -e HOME=$HOME -e no_proxy="$my_no_proxy" -e http_proxy -e https_proxy -e CACHEDEBUG -e CACHETRANSPORT -e CACHEMAXAGE -e CACHEBASE -u $USER -w $PWD -v ${HOME}/.ssh:${HOME}/.ssh -v $GITROOT:$GITROOT $CACHEMOUNT"

# Passing "debug" puts up an interactive bash shell
if [ "$1" == "debug" ]; then
  echo command: docker run ${RUN_CONTEXT_OPT} $IID "$@"
  docker run -i -t ${RUN_CONTEXT_OPT} $IID bash
else
  echo command: docker run ${RUN_CONTEXT_OPT} $IID "$@"
  docker run ${RUN_CONTEXT_OPT} $IID "$@"
fi

