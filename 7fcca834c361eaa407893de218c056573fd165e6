{
  "comments": [
    {
      "key": {
        "uuid": "5a7ca5a3_98f11998",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T09:33:08Z",
      "side": 1,
      "message": "This will cause problems if the process has not finished, i.e. the loop above has timed out.\n\nIn that case, run_proc_wait_terminated() will actually wait until the process finishes, which makes the timeout loop unnecessary.\n\nAlso, if the process terminates fine in run_proc_wait_terminated(), the variable ready will still be set to False, and the script will wrongly indicate a failure in the deployment, the return values should be checked to avoid this.",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 45
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_db88ebc8",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T18:07:22Z",
      "side": 1,
      "message": "Joseph, the timeout loop is not to monitor the process it self, the but the progress of the deployment, it does so by tailing the log file. Even when the log-file shows success, the process will continue to run for a while (probably some house keeping). It has shown to be problematic to continue with fuel snapshot before the fuel deploy process has terminated. That\u0027s why I synchronize with run_proc_wait_terminated.\n\nI dont get your second comment. While deploying it will loop in the for loop (line 109), until 1 of three things happen.\n1) The log file indicates Success (Line 115) after which ready is set to true and the for loop is broken.\n2) The log file indicates error/stop (Line 118) after which the for-loop is broken and ready remains false.\n3) Foor-loop time out, ready remains false\n\nAfter any of these events, we need to synck-up with the termination of the fuel deploy process (line 124).\n\nOne issue though, if the fuel deploy process is hanging, this script will remain hanging. For now I would want Jenkins to handle that case, by the regular Jenkins deploy-timeout.",
      "parentUuid": "5a7ca5a3_98f11998",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 45
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_5e74c99b",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T20:08:06Z",
      "side": 1,
      "message": "My comment was regarding the case 3 you listed above.\n\nAs you point out, in this case it\u0027s not that the process has succeeded with the deploy (status\u003d\u003doperational), or has failed (status\u003derror|stopped), the loop just timed out, but the deploy process may still be deploying just fine, it is only taking longer than expected.\n\nThe purpose of the timeout loop, I thought, was to guard against deployment jobs that exceeded a certain predetermined amount of time. At least this is the current behavior. With the introduced change, this won\u0027t be the case anymore. Now we will monitor the log file for the configured amount of time, but after that we will sit and wait for the process to end, which may or may not happen at a later point in time.\nI\u0027m not sure this is the desired behavior, and if it is I don\u0027t understand it, why not keep monitoring until the process finishes, i.e. until deploy_proc.poll() !\u003d None?\n\nAnd since we wait for the process to end by itself anyway, then the timeout given in the command line by the user is not honored.\n\nMy second comment, still in case 3, is for the case when the deploy process actually ends with a deployed environment after the loop. This will happen inside function run_proc_wait_terminated(). It took longer than expected (as per the timeout), but it finally managed to deploy successfully. However, since we don\u0027t check the return values of run_proc_wait_terminated(), we won\u0027t know. And because ready\u003d\u003dFalse, we will assume the deployment failed although it didn\u0027t.\n\n\nIn short, I would suggest that if you want Jenkins to automatically kill the deployment job instead of the script giving up after a while, then disregard the command line timeout value, and just create a monitoring loop that repeats while deploy_proc.poll() \u003d\u003d None.",
      "parentUuid": "5a7ca5a3_db88ebc8",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 45
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_5ee92919",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T20:34:12Z",
      "side": 1,
      "message": "Josep, the balance trick here is whether we want consistent deployment logs for troubleshooting with the risk of the script never terminating (Jenkins will terminate it with no logs). Or if we after timeout, we just bluntly terminate the script with an error, trying to - best effort retrieve (possibly inconsistant) logs?\nI don\u0027t have a strong feeling about it, I could do either or.\nI do have a strong feeling about that this deployment logging functionality is needed ASAP, for the sake of our plugin developers, and for the sake of avoiding Pipeline stand-still!",
      "parentUuid": "5a7ca5a3_5e74c99b",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 45
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_f8228d00",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 146,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T09:33:08Z",
      "side": 1,
      "message": "probably verbose output is not needed",
      "range": {
        "startLine": 146,
        "startChar": 31,
        "endLine": 146,
        "endChar": 32
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_fb85a7ad",
        "filename": "deploy/cloud/deployment.py",
        "patchSetId": 7
      },
      "lineNbr": 146,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T18:07:22Z",
      "side": 1,
      "message": "I agree, I will remove verbosity",
      "parentUuid": "5a7ca5a3_f8228d00",
      "range": {
        "startLine": 146,
        "startChar": 31,
        "endLine": 146,
        "endChar": 32
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_3bbb1f74",
        "filename": "deploy/common.py",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 584
      },
      "writtenOn": "2016-05-31T18:33:57Z",
      "side": 1,
      "message": "this is better\u003d\u003e if fun:",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_04236006",
        "filename": "deploy/common.py",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-06-01T20:23:52Z",
      "side": 1,
      "message": "Will do :-)",
      "parentUuid": "5a7ca5a3_3bbb1f74",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_18350946",
        "filename": "deploy/deploy.py",
        "patchSetId": 7
      },
      "lineNbr": 330,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T09:33:08Z",
      "side": 1,
      "message": "This assumes ../ci/ exists, maybe a more conservative default like \u0027.\u0027 could be used.\n\nWe should also make sure that the parameter passed is a directory.",
      "range": {
        "startLine": 330,
        "startChar": 49,
        "endLine": 330,
        "endChar": 56
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_9b9273f5",
        "filename": "deploy/deploy.py",
        "patchSetId": 7
      },
      "lineNbr": 330,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T18:07:22Z",
      "side": 1,
      "message": "../ci should always exist since the context of this autodeployer is ci/cd where the entire repo is cloned.\nI will fix the check to see if the terget directory exists.",
      "parentUuid": "5a7ca5a3_18350946",
      "range": {
        "startLine": 330,
        "startChar": 49,
        "endLine": 330,
        "endChar": 56
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_3e730db3",
        "filename": "deploy/deploy.py",
        "patchSetId": 7
      },
      "lineNbr": 330,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T20:08:06Z",
      "side": 1,
      "message": "But we are requiring the user to be in fuel/deploy/ to run the script. It\u0027s an unnecessary requirement, and not documented, someone could be calling the script while in fuel/ as \"python deploy/deploy.py\" for all we know...",
      "parentUuid": "5a7ca5a3_9b9273f5",
      "range": {
        "startLine": 330,
        "startChar": 49,
        "endLine": 330,
        "endChar": 56
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_5e828953",
        "filename": "deploy/deploy.py",
        "patchSetId": 7
      },
      "lineNbr": 330,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T20:34:12Z",
      "side": 1,
      "message": "I could look in to it - but in reality the only supported method is calling ci/deploy.sh. Nothing else is supported at this time.\nMy idea was to - unless a log destination is specified, it gets dumped to a known location by CI, always given that we\u0027re in the CI context - which this is all about.\nIf all agree, I can remove default and not generating any logs unless explicitly defined by args.\nBR/Jonas",
      "parentUuid": "5a7ca5a3_3e730db3",
      "range": {
        "startLine": 330,
        "startChar": 49,
        "endLine": 330,
        "endChar": 56
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_78175da4",
        "filename": "deploy/deploy_env.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 486
      },
      "writtenOn": "2016-05-31T09:33:08Z",
      "side": 1,
      "message": "maybe s.scp_get(\"deploy-*\", local_path\u003dself.deploy_log)",
      "range": {
        "startLine": 262,
        "startChar": 12,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_bb8f2fcc",
        "filename": "deploy/deploy_env.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T18:07:22Z",
      "side": 1,
      "message": "Agree :-)",
      "parentUuid": "5a7ca5a3_78175da4",
      "range": {
        "startLine": 262,
        "startChar": 12,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_9ba91327",
        "filename": "deploy/deploy_env.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 584
      },
      "writtenOn": "2016-05-31T18:33:57Z",
      "side": 1,
      "message": "maybe we could use shutil.move(src, dst) in the future",
      "range": {
        "startLine": 263,
        "startChar": 12,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_18abc98a",
        "filename": "deploy/ssh_client.py",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 2689
      },
      "writtenOn": "2016-05-31T06:23:04Z",
      "side": 1,
      "message": "Is it a required parameter in newer Paramikos?",
      "range": {
        "startLine": 88,
        "startChar": 60,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_1b9f4305",
        "filename": "deploy/ssh_client.py",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 204
      },
      "writtenOn": "2016-05-31T17:47:30Z",
      "side": 1,
      "message": "Peter, the lambda function is there to enable regexp.",
      "parentUuid": "5a7ca5a3_18abc98a",
      "range": {
        "startLine": 88,
        "startChar": 60,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "7fcca834c361eaa407893de218c056573fd165e6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}