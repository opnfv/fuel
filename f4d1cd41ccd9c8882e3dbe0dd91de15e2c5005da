{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_30e35ba5",
        "filename": "mcp/config/states/networks",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 2997
      },
      "writtenOn": "2018-01-18T15:57:52Z",
      "side": 1,
      "message": "these are annoying to read, could we create a function for them and just call it here?\ne.g.\nfunction get_nova_compute_pillar_data {\n  salt -C \u0027I@nova:compute and *01*\u0027 pillar.get _param:\"${1}\" --out yaml | cut -d\u0027 \u0027 -f2\n}\nPUBLIC_NET\u003d$(get_nova_compute_pillar_data \u0027opnfv_net_public\u0027)",
      "range": {
        "startLine": 13,
        "startChar": 11,
        "endLine": 14,
        "endChar": 65
      },
      "revId": "f4d1cd41ccd9c8882e3dbe0dd91de15e2c5005da",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_b09dab0c",
        "filename": "mcp/config/states/networks",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 2997
      },
      "writtenOn": "2018-01-18T16:00:25Z",
      "side": 1,
      "message": "also, we could add some debug prints after this block, if CI_DEBUG is defined\nthat should shed some light on why the verify is failing",
      "revId": "f4d1cd41ccd9c8882e3dbe0dd91de15e2c5005da",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_10e0d794",
        "filename": "mcp/reclass/classes/cluster/all-mcp-arch-common/opnfv/pod_config.yml.example",
        "patchSetId": 11
      },
      "lineNbr": 71,
      "author": {
        "id": 2997
      },
      "writtenOn": "2018-01-18T15:57:52Z",
      "side": 1,
      "message": "not aligned with 20/60 values in new IA change",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 71,
        "endChar": 44
      },
      "revId": "f4d1cd41ccd9c8882e3dbe0dd91de15e2c5005da",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}