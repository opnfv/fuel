#!/bin/bash -e
##############################################################################
# Copyright (c) 2018 Tieto
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
# Deploy ONAP on top of OPNFV installed by Fuel/MCP
# ONAP installation is managed by OPNFV Auto project


AUTO_INSTALL_DIR=/opt/auto
AUTO_REPO='https://gerrit.opnfv.org/gerrit/auto'
ONAP_INSTALL_SCRIPT='ci/deploy-onap-fuel.sh'

echo "Clone Auto Repo"
salt -C 'I@nova:controller and *01*' cmd.run "\
  git clone $AUTO_REPO $AUTO_INSTALL_DIR; \
  cd $AUTO_INSTALL_DIR; \
  git pull https://gerrit.opnfv.org/gerrit/auto refs/changes/71/64371/32"

echo "ONAP installation starts at $(date)"
echo "It can take several hours to finish."

# detect compute HW configuration, i.e. minimal values available across all compute nodes
CMP_COUNT=$(salt -C 'I@nova:compute' grains.get id --out txt | wc -l)
CMP_MIN_MEM=$(salt -C 'I@nova:compute' grains.get mem_total --out txt  | sed -re 's/^[^:]+: ([0-9]+)$/\1/g' | sort -n | head -n1)
CMP_MIN_CPUS=$(salt -C 'I@nova:compute' grains.get num_cpus --out txt  | sed -re 's/^[^:]+: ([0-9]+)$/\1/g' | sort -n | head -n1)

salt -C 'I@nova:controller and *01*' cmd.run ". /root/keystonercv3; \
  cd $AUTO_INSTALL_DIR; \
  export CMP_COUNT=$CMP_COUNT; \
  export CMP_MIN_MEM=$CMP_MIN_MEM; \
  export CMP_MIN_CPUS=$CMP_MIN_CPUS; \
  export AUTO_INSTALL_DIR=$AUTO_INSTALL_DIR; \
  $ONAP_INSTALL_SCRIPT | tee $AUTO_INSTALL_DIR/auto_deploy.log"
