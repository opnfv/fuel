##############################################################################
# Copyright (c) 2018 Mirantis Inc., Enea AB and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
{#- NOTE: br-{mgmt,ctl} are cross-referenced, careful when changing names #}
{%- import 'net_map.j2' as nm with context %}
{%- import 'net_macros.j2' as ma with context %}
{#- Filter-out NIC duplicates by constructing a dict (used NICs only) #}
{%- set nics = { nm.cmp001.nic_mgmt: True } %}
{%- set vlans = { nm.vlan_mgmt: nm.cmp001.nic_mgmt } %}
---
parameters:
  _param:
    # Should later be determined via PDF/IDF, AArch64 has ESP on /dev/sda1
{%- if nm.cmp001.idx < conf.nodes | length %}
{%- if conf.nodes[nm.cmp001.idx].node.type == 'virtual' %}
    ~cinder_lvm_devices: ['/dev/vdb']
{%- elif conf.nodes[nm.cmp001.idx].node.arch == 'aarch64' or
         conf.nodes[nm.cmp001.idx].disks.0.disk_capacity | storage_size_num | float > 2000000000000 %}
    ~cinder_lvm_devices: ['/dev/sda2']
{%- else %}
    ~cinder_lvm_devices: ['/dev/sda1']
{%- endif %}
{%- endif %}
  linux:
    network:
      bridge: openvswitch
      interface:
        # PXE/admin is always untagged on computes
        pxe_admin_int:
          enabled: true
          name: ${_param:pxe_admin_interface}
          proto: static
          type: eth
          address: ${_param:pxe_admin_address}
          netmask: ${_param:opnfv_net_admin_mask}
          mtu: ${_param:interface_mtu}
          noifupdown: true

{#- prevent duplicates for tagged mgmt on the same physical interface as PXE/admin #}
{%- if nm.cmp001.nic_admin in nics %}
  {%- do nics.pop(nm.cmp001.nic_admin) %}
{%- endif %}
{%- if ma.interface_str(nm.cmp001.nic_public, nm.vlan_public) in nics %}
  {%- do nics.pop(nm.cmp001.nic_public) %}
{%- endif %}

{{ ma.linux_network_interfaces_nic(nics) }}

{{ ma.linux_network_interfaces_vlan(vlans) }}

        br-ctl:
          enabled: true
          type: bridge
          proto: static
          address: ${_param:single_address}
          netmask: ${_param:opnfv_net_mgmt_mask}
          use_interfaces:
            - {{ ma.interface_str(nm.cmp001.nic_mgmt, nm.vlan_mgmt) }}
        br-floating:
          enabled: true
          type: ovs_bridge
          mtu: ${_param:interface_mtu}
          proto: static
          address: ${_param:external_address}
          netmask: ${_param:opnfv_net_public_mask}
          use_interfaces:
            - {{ ma.interface_str(nm.cmp001.nic_public, nm.vlan_public) }}
          gateway: ${_param:opnfv_net_public_gw}
          name_servers: {{ nm.dns_public }}
          noifupdown: true
        {{ ma.interface_str(nm.cmp001.nic_public, nm.vlan_public) }}:
          enabled: true
          proto: manual
          ovs_port_type: OVSPort
          type: ovs_port
          ovs_bridge: br-floating
          bridge: br-floating
          mtu: ${_param:interface_mtu}
