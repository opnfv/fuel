##############################################################################
# Copyright (c) 2017 Mirantis Inc., Enea AB and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
{# NOTE: br-{mgmt,ctl} are cross-referenced, careful when changing names #}
{%- if conf.net_config is defined and conf.idf is defined -%}
    {#- NOTE: Currently, we assume all cluster nodes use the same mapping -#}

    {#- Determine interface index for each network (plumbing vars) -#}
    {%- set idx_admin = conf['net_config']['admin']['interface'] -%}
    {%- set idx_mgmt = conf['net_config']['mgmt']['interface'] -%}
    {%- set idx_private = conf['net_config']['private']['interface'] -%}
    {%- set idx_public = conf['net_config']['public']['interface'] -%}

    {#- Physical interface OS name for each network (e.g. em1, enp1s0f1) -#}
    {%- set iface_names = conf['idf']['fuel']['network']['node'][3]['interfaces'] -%}
    {%- set nic_admin = iface_names[idx_admin] -%}
    {%- set nic_mgmt = iface_names[idx_mgmt] -%}
    {%- set nic_private = iface_names[idx_private] -%}
    {%- set nic_public = iface_names[idx_public] -%}

    {#- VLAN for each network (only untagged 'admin' is supported by MaaS config!) -#}
    {%- set vlan_admin = conf['net_config']['admin']['vlan'] -%}
    {%- set vlan_mgmt = conf['net_config']['mgmt']['vlan'] -%}
    {%- set vlan_private = conf['net_config']['private']['vlan'] -%}
    {%- set vlan_public = conf['net_config']['public']['vlan'] -%}
{%- else -%}
    {%- set nic_admin = 'enp6s0' -%}
    {%- set nic_mgmt = 'enp6s0' -%}
    {%- set nic_private = None -%}
    {%- set nic_public = None -%}
    {%- set vlan_admin = 'native' -%}
    {%- set vlan_mgmt = '300' -%}
    {%- set vlan_private = '1000' -%}
{%- endif -%}

{#- Filter-out NIC duplicates by constructing a dict (used NICs only) -#}
{%- set nics = { nic_admin: True, nic_mgmt: True } -%}

{%- set vlans = { vlan_admin: nic_admin, vlan_mgmt: nic_mgmt } -%}
---
parameters:
  linux:
    network:
      bridge: openvswitch
      interface:
{%- for nic in nics %}
    {%- if nic == nic_admin %}
        {{ nic }}:
          enabled: true
          type: eth
          proto: dhcp
          name: {{ nic }}
    {%- else %}
        {{ nic }}:
          enabled: true
          type: eth
          proto: manual
          address: 0.0.0.0
          {%- if nic == nic_public %}
            netmask: ${_param:opnfv_net_public_mask}
          {%- else %}
            netmask: 255.255.255.0
          {%- endif %}
          mtu: ${_param:interface_mtu}
          name: {{ nic }}
    {%- endif %}
{%- endfor %}

{%- for vlan in vlans %}
    {%- if vlan and vlan != 'native' %}
        {{ vlans[vlan] }}.{{ vlan }}:
          enabled: true
          proto: manual
          type: vlan
          name: {{ vlans[vlan] }}.{{ vlan }}
          use_interfaces:
            - {{ vlans[vlan] }}
    {%- endif %}
{%- endfor %}

        br-ctl:
          enabled: true
          type: bridge
          proto: static
          address: ${_param:single_address}
          netmask: 255.255.255.0
          use_interfaces:
            - {{ nic_mgmt }}{% if vlan_mgmt and vlan_mgmt != 'native' %}.{{ vlan_mgmt }}{% endif %}
        br-floating:
          enabled: true
          type: ovs_bridge
          mtu: ${_param:interface_mtu}
        br-ex:
          enabled: true
          type: ovs_port
          bridge: br-floating
          proto: static
          {%- if vlan_public and vlan_public != 'native' %}
          ovs_options: tag={{ vlan_public }}
          {%- endif %}
          address: ${_param:external_address}
          netmask: 255.255.255.0
          route:
            public:
              address: 0.0.0.0
              netmask: 0.0.0.0
              gateway: ${_param:opnfv_net_public_gw}
        {{ nic_public }}:
          enabled: true
          proto: manual
          ovs_port_type: OVSPort
          type: ovs_port
          ovs_bridge: br-floating
          bridge: br-floating
