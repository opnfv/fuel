##############################################################################
# Copyright (c) 2018 Mirantis Inc., Enea AB and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
{#- NOTE: br-{mgmt,ctl} are cross-referenced, careful when changing names #}
{%- import 'net_map.j2' as nm with context %}
{#- Filter-out NIC duplicates by constructing a dict (used NICs only) #}
{%- set nics = { nm.ctl01.nic_admin: True, nm.ctl01.nic_mgmt: True, nm.ctl01.nic_public: True } %}
{%- set vlans = { nm.vlan_admin: nm.ctl01.nic_admin, nm.vlan_mgmt: nm.ctl01.nic_mgmt, nm.vlan_public: nm.ctl01.nic_public } %}
---
classes:
  - system.linux.system.repo.glusterfs
  - service.keepalived.cluster.single
  - system.glusterfs.server.volume.glance
  - system.glusterfs.server.volume.keystone
  - system.glusterfs.server.cluster
  - system.salt.control.virt
  - system.salt.control.cluster.openstack_control_cluster
  - system.salt.control.cluster.openstack_proxy_cluster
  - system.salt.control.cluster.openstack_database_cluster
  - system.salt.control.cluster.openstack_message_queue_cluster
  - system.salt.control.cluster.openstack_telemetry_cluster
{%- if conf.MCP_STACKLIGHT %}
  - system.salt.control.cluster.stacklight_server_cluster
  - system.salt.control.cluster.stacklight_log_cluster
  - system.salt.control.cluster.stacklight_telemetry_cluster
{%- endif %}
  - cluster.mcp-pike-common-ha.include.maas_proxy
  - cluster.mcp-pike-common-ha.include.lab_proxy_pdf
parameters:
  _param:
    linux_system_codename: xenial
    glusterfs_version: '3.13'
    cluster_vip_address: ${_param:infra_kvm_address}
    cluster_node01_address: ${_param:infra_kvm_node01_address}
    cluster_node02_address: ${_param:infra_kvm_node02_address}
    cluster_node03_address: ${_param:infra_kvm_node03_address}
    keepalived_vip_interface: br-ctl
    keepalived_vip_virtual_router_id: 69
  libvirt:
    server:
      service: libvirtd
      config_sys: /etc/default/libvirtd
      unix_sock_group: libvirt
  salt:
    control:
      size:  # RAM 4096,8192,16384,32768,65536
        # Default production sizing
        openstack.control:
          cpu: 4
          ram: 12288
          disk_profile: small
          net_profile: default
        openstack.database:
          cpu: 4
          ram: 6144
          disk_profile: large
          net_profile: default
        openstack.message_queue:
          cpu: 4
          ram: 2048
          disk_profile: small
          net_profile: default
        openstack.telemetry:
          cpu: 2
          ram: 3072
          disk_profile: xxlarge
          net_profile: default
{%- if conf.MCP_STACKLIGHT %}
        stacklight.log:
          cpu: 2
          ram: 4096
          disk_profile: xxlarge
          net_profile: default
        stacklight.server:
          cpu: 2
          ram: 4096
          disk_profile: small
          net_profile: default
        stacklight.telemetry:
          cpu: 2
          ram: 4096
          disk_profile: xxlarge
          net_profile: default
{%- endif %}
        openstack.proxy:
          cpu: 2
          ram: 2048
          disk_profile: small
          net_profile: default_ext
      cluster:
        internal:
          node:
            mdb01:
              image: ${_param:salt_control_xenial_image}
            mdb02:
              image: ${_param:salt_control_xenial_image}
            mdb03:
              image: ${_param:salt_control_xenial_image}
            ctl01:
              image: ${_param:salt_control_xenial_image}
            ctl02:
              image: ${_param:salt_control_xenial_image}
            ctl03:
              image: ${_param:salt_control_xenial_image}
            dbs01:
              image: ${_param:salt_control_xenial_image}
            dbs02:
              image: ${_param:salt_control_xenial_image}
            dbs03:
              image: ${_param:salt_control_xenial_image}
            msg01:
              image: ${_param:salt_control_xenial_image}
            msg02:
              image: ${_param:salt_control_xenial_image}
            msg03:
              image: ${_param:salt_control_xenial_image}
            prx01:
              image: ${_param:salt_control_xenial_image}
            prx02:
              image: ${_param:salt_control_xenial_image}
              provider: kvm03.${_param:cluster_domain}
  virt:
    nic:
      default:
        eth1:
          bridge: br-mgmt
          model: virtio
        eth0:
          bridge: br-ctl
          model: virtio
      default_ext:
        eth2:
          bridge: br-mgmt
          model: virtio
        eth1:
          bridge: br-ex
          model: virtio
        eth0:
          bridge: br-ctl
          model: virtio
  glusterfs:
    server:
      service: glusterd
      volumes:
        nova_instances:
          storage: /srv/glusterfs/nova_instances
          replica: 3
          bricks:
            - ${_param:cluster_node01_address}:/srv/glusterfs/nova_instances
            - ${_param:cluster_node02_address}:/srv/glusterfs/nova_instances
            - ${_param:cluster_node03_address}:/srv/glusterfs/nova_instances
          options:
            cluster.readdir-optimize: 'True'
            nfs.disable: 'True'
            network.remote-dio: 'True'
            cluster.favorite-child-policy: mtime
            diagnostics.client-log-level: WARNING
            diagnostics.brick-log-level: WARNING
  linux:
    system:
      kernel:
        boot_options:
          - spectre_v2=off
          - nopti
    network:
      interface:
{%- for nic in nics %}
        {{ nic }}:
          enabled: true
          type: eth
          proto: manual
          address: 0.0.0.0
          netmask: 255.255.255.0
          name: {{ nic }}
          noifupdown: true
{%- endfor %}

{%- for vlan in vlans %}
    {%- if vlan | int > 0 %}
        {{ vlans[vlan] }}.{{ vlan }}:
          enabled: true
          proto: manual
          type: vlan
          name: {{ vlans[vlan] }}.{{ vlan }}
          use_interfaces:
            - {{ vlans[vlan] }}
          noifupdown: true
    {%- endif %}
{%- endfor %}

        br-mgmt:
          enabled: true
          proto: dhcp
          type: bridge
          use_interfaces:
            - {{ nm.ctl01.nic_admin }}{% if nm.vlan_admin | int > 0 %}.{{ nm.vlan_admin }}{% endif %}
          noifupdown: true
        br-ctl:
          enabled: true
          type: bridge
          proto: static
          address: ${_param:single_address}
          netmask: 255.255.255.0
          use_interfaces:
            - {{ nm.ctl01.nic_mgmt }}{% if nm.vlan_mgmt | int > 0 %}.{{ nm.vlan_mgmt }}{% endif %}
          noifupdown: true
        br-ex:
          enabled: true
          proto: manual
          address: 0.0.0.0
          netmask: ${_param:opnfv_net_public_mask}
          type: bridge
          use_interfaces:
            - {{ nm.ctl01.nic_public }}{% if nm.vlan_public | int > 0 %}.{{ nm.vlan_public }}{% endif %}
          noifupdown: true
